// Generated by view binder compiler. Do not edit!
package csmp.part_b.p5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView;
import csmp.part_b.p5.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAlbumDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView albumYearIcon;

  @NonNull
  public final TextView albumYearText;

  @NonNull
  public final ImageView artistIcon;

  @NonNull
  public final TextView artistText;

  @NonNull
  public final ViewStub cabStub;

  @NonNull
  public final ImageView durationIcon;

  @NonNull
  public final TextView durationText;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final View headerOverlay;

  @NonNull
  public final ImageView image;

  @NonNull
  public final ObservableRecyclerView list;

  @NonNull
  public final ImageView songCountIcon;

  @NonNull
  public final TextView songCountText;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAlbumDetailBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView albumYearIcon, @NonNull TextView albumYearText,
      @NonNull ImageView artistIcon, @NonNull TextView artistText, @NonNull ViewStub cabStub,
      @NonNull ImageView durationIcon, @NonNull TextView durationText, @NonNull LinearLayout header,
      @NonNull View headerOverlay, @NonNull ImageView image, @NonNull ObservableRecyclerView list,
      @NonNull ImageView songCountIcon, @NonNull TextView songCountText, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.albumYearIcon = albumYearIcon;
    this.albumYearText = albumYearText;
    this.artistIcon = artistIcon;
    this.artistText = artistText;
    this.cabStub = cabStub;
    this.durationIcon = durationIcon;
    this.durationText = durationText;
    this.header = header;
    this.headerOverlay = headerOverlay;
    this.image = image;
    this.list = list;
    this.songCountIcon = songCountIcon;
    this.songCountText = songCountText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAlbumDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAlbumDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_album_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAlbumDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.album_year_icon;
      ImageView albumYearIcon = rootView.findViewById(id);
      if (albumYearIcon == null) {
        break missingId;
      }

      id = R.id.album_year_text;
      TextView albumYearText = rootView.findViewById(id);
      if (albumYearText == null) {
        break missingId;
      }

      id = R.id.artist_icon;
      ImageView artistIcon = rootView.findViewById(id);
      if (artistIcon == null) {
        break missingId;
      }

      id = R.id.artist_text;
      TextView artistText = rootView.findViewById(id);
      if (artistText == null) {
        break missingId;
      }

      id = R.id.cab_stub;
      ViewStub cabStub = rootView.findViewById(id);
      if (cabStub == null) {
        break missingId;
      }

      id = R.id.duration_icon;
      ImageView durationIcon = rootView.findViewById(id);
      if (durationIcon == null) {
        break missingId;
      }

      id = R.id.duration_text;
      TextView durationText = rootView.findViewById(id);
      if (durationText == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = rootView.findViewById(id);
      if (header == null) {
        break missingId;
      }

      id = R.id.header_overlay;
      View headerOverlay = rootView.findViewById(id);
      if (headerOverlay == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.list;
      ObservableRecyclerView list = rootView.findViewById(id);
      if (list == null) {
        break missingId;
      }

      id = R.id.song_count_icon;
      ImageView songCountIcon = rootView.findViewById(id);
      if (songCountIcon == null) {
        break missingId;
      }

      id = R.id.song_count_text;
      TextView songCountText = rootView.findViewById(id);
      if (songCountText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAlbumDetailBinding((LinearLayout) rootView, albumYearIcon, albumYearText,
          artistIcon, artistText, cabStub, durationIcon, durationText, header, headerOverlay, image,
          list, songCountIcon, songCountText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
