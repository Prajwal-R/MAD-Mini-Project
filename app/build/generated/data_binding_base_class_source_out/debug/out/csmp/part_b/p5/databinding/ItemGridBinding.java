// Generated by view binder compiler. Do not edit!
package csmp.part_b.p5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import csmp.part_b.p5.R;
import csmp.part_b.p5.views.WidthFitSquareLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGridBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView image;

  @NonNull
  public final WidthFitSquareLayout imageContainer;

  @NonNull
  public final LinearLayout paletteColorContainer;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView title;

  private ItemGridBinding(@NonNull FrameLayout rootView, @NonNull ImageView image,
      @NonNull WidthFitSquareLayout imageContainer, @NonNull LinearLayout paletteColorContainer,
      @NonNull TextView text, @NonNull TextView title) {
    this.rootView = rootView;
    this.image = image;
    this.imageContainer = imageContainer;
    this.paletteColorContainer = paletteColorContainer;
    this.text = text;
    this.title = title;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGridBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGridBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_grid, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGridBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.image_container;
      WidthFitSquareLayout imageContainer = rootView.findViewById(id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.palette_color_container;
      LinearLayout paletteColorContainer = rootView.findViewById(id);
      if (paletteColorContainer == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = rootView.findViewById(id);
      if (text == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new ItemGridBinding((FrameLayout) rootView, image, imageContainer,
          paletteColorContainer, text, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
