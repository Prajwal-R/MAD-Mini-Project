// Generated by view binder compiler. Do not edit!
package csmp.part_b.p5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.sothree.slidinguppanel.SlidingUpPanelLayout;
import csmp.part_b.p5.R;
import csmp.part_b.p5.views.StatusBarMarginFrameLayout;
import csmp.part_b.p5.views.WidthFitSquareLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCardPlayerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final WidthFitSquareLayout albumCoverContainer;

  @NonNull
  public final LinearLayout cardContent;

  @NonNull
  public final View colorBackground;

  @NonNull
  public final ItemListBinding currentSong;

  @NonNull
  public final View draggableArea;

  @NonNull
  public final RelativeLayout playerContent;

  @NonNull
  public final StatusBarMarginFrameLayout playerPanel;

  @NonNull
  public final TextView playerQueueSubHeader;

  @NonNull
  public final RecyclerView playerRecyclerView;

  @NonNull
  public final SlidingUpPanelLayout playerSlidingLayout;

  @NonNull
  public final Toolbar playerToolbar;

  @NonNull
  public final CardView playingQueueCard;

  @NonNull
  public final FrameLayout toolbarContainer;

  private FragmentCardPlayerBinding(@NonNull FrameLayout rootView,
      @NonNull WidthFitSquareLayout albumCoverContainer, @NonNull LinearLayout cardContent,
      @NonNull View colorBackground, @NonNull ItemListBinding currentSong,
      @NonNull View draggableArea, @NonNull RelativeLayout playerContent,
      @NonNull StatusBarMarginFrameLayout playerPanel, @NonNull TextView playerQueueSubHeader,
      @NonNull RecyclerView playerRecyclerView, @NonNull SlidingUpPanelLayout playerSlidingLayout,
      @NonNull Toolbar playerToolbar, @NonNull CardView playingQueueCard,
      @NonNull FrameLayout toolbarContainer) {
    this.rootView = rootView;
    this.albumCoverContainer = albumCoverContainer;
    this.cardContent = cardContent;
    this.colorBackground = colorBackground;
    this.currentSong = currentSong;
    this.draggableArea = draggableArea;
    this.playerContent = playerContent;
    this.playerPanel = playerPanel;
    this.playerQueueSubHeader = playerQueueSubHeader;
    this.playerRecyclerView = playerRecyclerView;
    this.playerSlidingLayout = playerSlidingLayout;
    this.playerToolbar = playerToolbar;
    this.playingQueueCard = playingQueueCard;
    this.toolbarContainer = toolbarContainer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCardPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCardPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_card_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCardPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.album_cover_container;
      WidthFitSquareLayout albumCoverContainer = rootView.findViewById(id);
      if (albumCoverContainer == null) {
        break missingId;
      }

      id = R.id.card_content;
      LinearLayout cardContent = rootView.findViewById(id);
      if (cardContent == null) {
        break missingId;
      }

      id = R.id.color_background;
      View colorBackground = rootView.findViewById(id);
      if (colorBackground == null) {
        break missingId;
      }

      id = R.id.current_song;
      View currentSong = rootView.findViewById(id);
      if (currentSong == null) {
        break missingId;
      }
      ItemListBinding binding_currentSong = ItemListBinding.bind(currentSong);

      id = R.id.draggable_area;
      View draggableArea = rootView.findViewById(id);
      if (draggableArea == null) {
        break missingId;
      }

      id = R.id.player_content;
      RelativeLayout playerContent = rootView.findViewById(id);
      if (playerContent == null) {
        break missingId;
      }

      id = R.id.player_panel;
      StatusBarMarginFrameLayout playerPanel = rootView.findViewById(id);
      if (playerPanel == null) {
        break missingId;
      }

      id = R.id.player_queue_sub_header;
      TextView playerQueueSubHeader = rootView.findViewById(id);
      if (playerQueueSubHeader == null) {
        break missingId;
      }

      id = R.id.player_recycler_view;
      RecyclerView playerRecyclerView = rootView.findViewById(id);
      if (playerRecyclerView == null) {
        break missingId;
      }

      id = R.id.player_sliding_layout;
      SlidingUpPanelLayout playerSlidingLayout = rootView.findViewById(id);
      if (playerSlidingLayout == null) {
        break missingId;
      }

      id = R.id.player_toolbar;
      Toolbar playerToolbar = rootView.findViewById(id);
      if (playerToolbar == null) {
        break missingId;
      }

      id = R.id.playing_queue_card;
      CardView playingQueueCard = rootView.findViewById(id);
      if (playingQueueCard == null) {
        break missingId;
      }

      id = R.id.toolbar_container;
      FrameLayout toolbarContainer = rootView.findViewById(id);
      if (toolbarContainer == null) {
        break missingId;
      }

      return new FragmentCardPlayerBinding((FrameLayout) rootView, albumCoverContainer, cardContent,
          colorBackground, binding_currentSong, draggableArea, playerContent, playerPanel,
          playerQueueSubHeader, playerRecyclerView, playerSlidingLayout, playerToolbar,
          playingQueueCard, toolbarContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
